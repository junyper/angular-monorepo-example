import prettyFormat from 'pretty-format';
const { DOMElement, DOMCollection } = prettyFormat.plugins;
const prettyDOM = (htmlElement, maxLength, options) => {
    if (htmlElement.documentElement) {
        // eslint-disable-next-line no-param-reassign
        htmlElement = htmlElement.documentElement;
    }
    const debugContent = prettyFormat(htmlElement, Object.assign({
        plugins: [DOMElement, DOMCollection],
        printFunctionName: false,
        highlight: true
    }, options));
    return maxLength !== undefined && htmlElement.outerHTML.length > maxLength
        ? `${debugContent.slice(0, maxLength)}...`
        : debugContent;
};
const ɵ0 = prettyDOM;
// eslint-disable-next-line no-console
const debug = (el = document, maxLength, options) => console.log(prettyDOM(el, maxLength, options));
const ɵ1 = debug;
export { debug };
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2RlYnVnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sWUFBWSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxNQUFNLEVBQUUsVUFBVSxFQUFFLGFBQWEsRUFBRSxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUM7QUFFM0QsTUFBTSxTQUFTLEdBQUcsQ0FBQyxXQUFXLEVBQUUsU0FBVSxFQUFFLE9BQVEsRUFBRSxFQUFFO0lBQ3RELElBQUksV0FBVyxDQUFDLGVBQWUsRUFBRTtRQUMvQiw2Q0FBNkM7UUFDN0MsV0FBVyxHQUFHLFdBQVcsQ0FBQyxlQUFlLENBQUM7S0FDM0M7SUFFRCxNQUFNLFlBQVksR0FBRyxZQUFZLENBQy9CLFdBQVcsRUFDWCxNQUFNLENBQUMsTUFBTSxDQUNYO1FBQ0UsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQztRQUNwQyxpQkFBaUIsRUFBRSxLQUFLO1FBQ3hCLFNBQVMsRUFBRSxJQUFJO0tBQ2hCLEVBQ0QsT0FBTyxDQUNSLENBQ0YsQ0FBQztJQUNGLE9BQU8sU0FBUyxLQUFLLFNBQVMsSUFBSSxXQUFXLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxTQUFTO1FBQ3hFLENBQUMsQ0FBQyxHQUFHLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxLQUFLO1FBQzFDLENBQUMsQ0FBQyxZQUFZLENBQUM7QUFDbkIsQ0FBQyxDQUFDOztBQUVGLHNDQUFzQztBQUN0QyxNQUFNLEtBQUssR0FBRyxDQUFDLEVBQUUsR0FBRyxRQUFRLEVBQUUsU0FBVSxFQUFFLE9BQVEsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsRUFBRSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDOztBQUV0RyxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBwcmV0dHlGb3JtYXQgZnJvbSAncHJldHR5LWZvcm1hdCc7XG5cbmNvbnN0IHsgRE9NRWxlbWVudCwgRE9NQ29sbGVjdGlvbiB9ID0gcHJldHR5Rm9ybWF0LnBsdWdpbnM7XG5cbmNvbnN0IHByZXR0eURPTSA9IChodG1sRWxlbWVudCwgbWF4TGVuZ3RoPywgb3B0aW9ucz8pID0+IHtcbiAgaWYgKGh0bWxFbGVtZW50LmRvY3VtZW50RWxlbWVudCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIGh0bWxFbGVtZW50ID0gaHRtbEVsZW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICB9XG5cbiAgY29uc3QgZGVidWdDb250ZW50ID0gcHJldHR5Rm9ybWF0KFxuICAgIGh0bWxFbGVtZW50LFxuICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICB7XG4gICAgICAgIHBsdWdpbnM6IFtET01FbGVtZW50LCBET01Db2xsZWN0aW9uXSxcbiAgICAgICAgcHJpbnRGdW5jdGlvbk5hbWU6IGZhbHNlLFxuICAgICAgICBoaWdobGlnaHQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBvcHRpb25zXG4gICAgKVxuICApO1xuICByZXR1cm4gbWF4TGVuZ3RoICE9PSB1bmRlZmluZWQgJiYgaHRtbEVsZW1lbnQub3V0ZXJIVE1MLmxlbmd0aCA+IG1heExlbmd0aFxuICAgID8gYCR7ZGVidWdDb250ZW50LnNsaWNlKDAsIG1heExlbmd0aCl9Li4uYFxuICAgIDogZGVidWdDb250ZW50O1xufTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbmNvbnN0IGRlYnVnID0gKGVsID0gZG9jdW1lbnQsIG1heExlbmd0aD8sIG9wdGlvbnM/KSA9PiBjb25zb2xlLmxvZyhwcmV0dHlET00oZWwsIG1heExlbmd0aCwgb3B0aW9ucykpO1xuXG5leHBvcnQgeyBkZWJ1ZyB9O1xuIl19